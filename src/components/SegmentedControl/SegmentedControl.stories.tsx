import type { Meta, StoryObj } from '@storybook/react';
import { useState } from 'react';

import { hideArgsControl } from '../../../.storybook/shared/args-manager';
import { SegmentedControl, type SegmentedControlProps } from './index';

const meta = {
  title: 'Navigation/SegmentedControl',
  component: SegmentedControl,
  argTypes: hideArgsControl(['children']),
  parameters: {
    docs: {
      description: {
        component: `
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç \`SegmentedControl\` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.
–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤ –≤–∏–¥–µ —Å–µ–≥–º–µ–Ω—Ç–æ–≤, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ —Ç–∞–±—ã, –Ω–æ –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ –∞–∫—Ü–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π.

üß† –ü–æ–ª–µ–∑–µ–Ω –≤ —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ/—Ñ–∏–ª—å—Ç—Ä –∏–ª–∏ –≤—ã–±–∏—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–í—Å–µ / –ê–∫—Ç–∏–≤–Ω—ã–µ / –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ").
      `
      }
    }
  }
} satisfies Meta<typeof SegmentedControl>;

export default meta;

const labels = [
  { label: '–ü–µ—Ä–≤—ã–π', value: '–ü–µ—Ä–≤—ã–π' },
  { label: '–í—Ç–æ—Ä–æ–π', value: '–í—Ç–æ—Ä–æ–π' },
  { label: '–¢—Ä–µ—Ç–∏–π', value: '–¢—Ä–µ—Ç–∏–π' }
];

export const Playground: StoryObj<SegmentedControlProps> = {
  render: (args) => {
    const [selected, setSelected] = useState(labels[0].value);

    return (
      <SegmentedControl {...args}>
        {labels.map(({ value, label }) => (
          <SegmentedControl.Item
            key={value}
            selected={selected === value}
            onClick={() => {
              setSelected(value);
            }}
          >
            {label}
          </SegmentedControl.Item>
        ))}
      </SegmentedControl>
    );
  },
  decorators: [
    (Component) => (
      <div style={{ width: 500 }}>
        <Component />
      </div>
    )
  ]
};
