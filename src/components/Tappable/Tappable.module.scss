@use '../../styles/shared-mixins/reset-clickable';

.Tappable {
  @include reset-clickable.resetClickable;

  position: relative;
  overflow: hidden;
}

// [States] Hovered
.Tappable_interactive:not(.Tappable_disabled):hover {
  background-color: var(--MaxUi-Tappable_background-hovered, var(--states-background-hovered-transparent));
}

// [States] Pressed
.Tappable_interactive.Tappable_activeMode_ripple:not(.Tappable_disabled) {
  --Ripple_backgroundColor: var(--MaxUi-Tappable_background-pressed, var(--states-background-pressed-transparent));
}
.Tappable_interactive.Tappable_activeMode_highlight:not(.Tappable_disabled):active {
  background-color: var(--MaxUi-Tappable_background-pressed, var(--states-background-pressed-transparent));
}

// [States] Disabled
.Tappable_interactive:not(.Tappable_disabled) {
  cursor: pointer;
}
.Tappable_interactive.Tappable_disabled {
  cursor: not-allowed;
}

// [Parts] Ripple
.Tappable__ripple {
  position: absolute;
  inset: 0;
  pointer-events: none;
}
